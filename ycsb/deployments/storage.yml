# Use root/example as user/password credentials
version: '3.1'

services:
  mongo0:
    image: mongo
    hostname: mongo0
    networks:
      - proteus_net
    volumes:
      - ${HOME}/dataset/:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p example --quiet) -eq 1
      interval: 10s
    command: ["--replSet", "rs0", "--bind_ip_all"]
    deploy:
      restart_policy:
        condition: none
      placement:
       constraints:
       - node.labels.client == true

  mongo1:
    image: mongo
    hostname: mongo1
    networks:
      - proteus_net
    volumes:
      - ${HOME}/dataset/:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p example --quiet) -eq 1
      interval: 10s
    command: ["--replSet", "rs0", "--bind_ip_all"]
    deploy:
      restart_policy:
        condition: none
      placement:
       constraints:
       - node.labels.cloud == true
         
  mongo2:
    image: mongo
    hostname: mongo2
    networks:
      - proteus_net
    ports:
      - 27017:27017
    volumes:
      - ${HOME}/dataset/:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p example --quiet) -eq 1
      interval: 10s
    command: ["--replSet", "rs0", "--bind_ip_all"]
    deploy:
      restart_policy:
        condition: none
      placement:
       constraints:
       - node.labels.cloud1 == true

networks:
  qpu_graph:
  proteus_net:
    external: true
