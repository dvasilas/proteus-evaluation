// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf-spec/mysql.proto

package mysql

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpdateRecord struct {
	SequenceId           int64                `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	RecordID             string               `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Table                string               `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	Attributes           []*Attributes        `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateRecord) Reset()         { *m = UpdateRecord{} }
func (m *UpdateRecord) String() string { return proto.CompactTextString(m) }
func (*UpdateRecord) ProtoMessage()    {}
func (*UpdateRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_29699452324296ed, []int{0}
}

func (m *UpdateRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecord.Unmarshal(m, b)
}
func (m *UpdateRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecord.Marshal(b, m, deterministic)
}
func (m *UpdateRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecord.Merge(m, src)
}
func (m *UpdateRecord) XXX_Size() int {
	return xxx_messageInfo_UpdateRecord.Size(m)
}
func (m *UpdateRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecord.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecord proto.InternalMessageInfo

func (m *UpdateRecord) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *UpdateRecord) GetRecordID() string {
	if m != nil {
		return m.RecordID
	}
	return ""
}

func (m *UpdateRecord) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *UpdateRecord) GetAttributes() []*Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UpdateRecord) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Attributes struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	ValueOld             string   `protobuf:"bytes,2,opt,name=ValueOld,proto3" json:"ValueOld,omitempty"`
	ValueNew             string   `protobuf:"bytes,3,opt,name=ValueNew,proto3" json:"ValueNew,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attributes) Reset()         { *m = Attributes{} }
func (m *Attributes) String() string { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()    {}
func (*Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_29699452324296ed, []int{1}
}

func (m *Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attributes.Unmarshal(m, b)
}
func (m *Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attributes.Marshal(b, m, deterministic)
}
func (m *Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attributes.Merge(m, src)
}
func (m *Attributes) XXX_Size() int {
	return xxx_messageInfo_Attributes.Size(m)
}
func (m *Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Attributes proto.InternalMessageInfo

func (m *Attributes) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Attributes) GetValueOld() string {
	if m != nil {
		return m.ValueOld
	}
	return ""
}

func (m *Attributes) GetValueNew() string {
	if m != nil {
		return m.ValueNew
	}
	return ""
}

type Request struct {
	// Types that are valid to be assigned to Val:
	//	*Request_Request
	//	*Request_Ack
	Val                  isRequest_Val `protobuf_oneof:"val"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_29699452324296ed, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type isRequest_Val interface {
	isRequest_Val()
}

type Request_Request struct {
	Request *SubRequest `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type Request_Ack struct {
	Ack *AckMsg `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

func (*Request_Request) isRequest_Val() {}

func (*Request_Ack) isRequest_Val() {}

func (m *Request) GetVal() isRequest_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *Request) GetRequest() *SubRequest {
	if x, ok := m.GetVal().(*Request_Request); ok {
		return x.Request
	}
	return nil
}

func (m *Request) GetAck() *AckMsg {
	if x, ok := m.GetVal().(*Request_Ack); ok {
		return x.Ack
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_Request)(nil),
		(*Request_Ack)(nil),
	}
}

type SubRequest struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sync                 bool                 `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	Table                string               `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubRequest) Reset()         { *m = SubRequest{} }
func (m *SubRequest) String() string { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()    {}
func (*SubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_29699452324296ed, []int{3}
}

func (m *SubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubRequest.Unmarshal(m, b)
}
func (m *SubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubRequest.Marshal(b, m, deterministic)
}
func (m *SubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubRequest.Merge(m, src)
}
func (m *SubRequest) XXX_Size() int {
	return xxx_messageInfo_SubRequest.Size(m)
}
func (m *SubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubRequest proto.InternalMessageInfo

func (m *SubRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SubRequest) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

func (m *SubRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type AckMsg struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckMsg) Reset()         { *m = AckMsg{} }
func (m *AckMsg) String() string { return proto.CompactTextString(m) }
func (*AckMsg) ProtoMessage()    {}
func (*AckMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_29699452324296ed, []int{4}
}

func (m *AckMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckMsg.Unmarshal(m, b)
}
func (m *AckMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckMsg.Marshal(b, m, deterministic)
}
func (m *AckMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckMsg.Merge(m, src)
}
func (m *AckMsg) XXX_Size() int {
	return xxx_messageInfo_AckMsg.Size(m)
}
func (m *AckMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AckMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AckMsg proto.InternalMessageInfo

func (m *AckMsg) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func init() {
	proto.RegisterType((*UpdateRecord)(nil), "mysql.UpdateRecord")
	proto.RegisterType((*Attributes)(nil), "mysql.Attributes")
	proto.RegisterType((*Request)(nil), "mysql.Request")
	proto.RegisterType((*SubRequest)(nil), "mysql.SubRequest")
	proto.RegisterType((*AckMsg)(nil), "mysql.AckMsg")
}

func init() { proto.RegisterFile("api/protobuf-spec/mysql.proto", fileDescriptor_29699452324296ed) }

var fileDescriptor_29699452324296ed = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x5d, 0x93, 0x6e, 0xdb, 0x9d, 0x85, 0x0a, 0x0c, 0x87, 0x68, 0x25, 0xd4, 0x25, 0xa7, 0x70,
	0x68, 0x52, 0xc2, 0x85, 0x1b, 0xa2, 0xe2, 0xd0, 0x0a, 0xf1, 0xe5, 0x96, 0x1e, 0xb8, 0x20, 0xdb,
	0x19, 0xb6, 0x56, 0xbd, 0x9b, 0x34, 0xb6, 0x8b, 0xf6, 0x4f, 0xf2, 0x9b, 0xd0, 0xda, 0x71, 0xb6,
	0x48, 0x48, 0xa8, 0xb7, 0x79, 0x33, 0x4f, 0xe3, 0xf7, 0xc6, 0x0f, 0x9e, 0xf3, 0x56, 0x95, 0x6d,
	0xd7, 0xd8, 0x46, 0xb8, 0x9f, 0x47, 0xa6, 0x45, 0x59, 0x2e, 0xd7, 0xe6, 0x46, 0x17, 0xbe, 0x47,
	0xc7, 0x1e, 0xcc, 0x0e, 0x17, 0x4d, 0xb3, 0xd0, 0x38, 0x10, 0x4b, 0xab, 0x96, 0x68, 0x2c, 0x5f,
	0xb6, 0x81, 0x97, 0xfd, 0x26, 0xf0, 0xf0, 0x5b, 0x5b, 0x73, 0x8b, 0x0c, 0x65, 0xd3, 0xd5, 0xf4,
	0x10, 0xa6, 0x06, 0x6f, 0x1c, 0xae, 0x24, 0xfe, 0x50, 0x75, 0x4a, 0xe6, 0x24, 0x4f, 0x18, 0xc4,
	0xd6, 0x59, 0x4d, 0x67, 0xb0, 0xdf, 0x79, 0xea, 0xd9, 0xfb, 0xf4, 0xc1, 0x9c, 0xe4, 0x13, 0x36,
	0x60, 0xfa, 0x0c, 0xc6, 0x96, 0x0b, 0x8d, 0x69, 0xe2, 0x07, 0x01, 0xd0, 0x57, 0x00, 0xdc, 0xda,
	0x4e, 0x09, 0x67, 0xd1, 0xa4, 0x3b, 0xf3, 0x24, 0x9f, 0x56, 0x4f, 0x8a, 0xa0, 0xf6, 0xdd, 0x30,
	0x60, 0x77, 0x48, 0xf4, 0x0d, 0x4c, 0x06, 0xa5, 0xe9, 0x78, 0x4e, 0xf2, 0x69, 0x35, 0x2b, 0x82,
	0x97, 0x22, 0x7a, 0x29, 0x2e, 0x22, 0x83, 0x6d, 0xc9, 0xd9, 0x25, 0xc0, 0x76, 0x27, 0x7d, 0x0c,
	0xc9, 0x07, 0x5c, 0x7b, 0x17, 0x13, 0xb6, 0x29, 0x37, 0xf2, 0x2f, 0xb9, 0x76, 0xf8, 0x59, 0xd7,
	0x51, 0x7e, 0xc4, 0xc3, 0xec, 0x13, 0xfe, 0xea, 0x1d, 0x0c, 0x38, 0x13, 0xb0, 0xc7, 0x36, 0x47,
	0x30, 0x96, 0x1e, 0xc1, 0x5e, 0x17, 0x4a, 0xbf, 0x78, 0x6b, 0xe6, 0xdc, 0x89, 0x9e, 0x73, 0x3a,
	0x62, 0x91, 0x43, 0x5f, 0x40, 0xc2, 0xe5, 0xb5, 0x7f, 0x6c, 0x5a, 0x3d, 0x8a, 0xbe, 0xe5, 0xf5,
	0x47, 0xb3, 0x38, 0x1d, 0xb1, 0xcd, 0xec, 0x64, 0x0c, 0xc9, 0x2d, 0xd7, 0x59, 0x0b, 0xb0, 0x5d,
	0xf1, 0xf7, 0x0d, 0xc8, 0x3d, 0x6e, 0x40, 0x29, 0xec, 0x98, 0xf5, 0x4a, 0xfa, 0x27, 0xf7, 0x99,
	0xaf, 0xff, 0xfd, 0x35, 0xd9, 0x4b, 0xd8, 0x0d, 0x4a, 0xfe, 0xfb, 0xef, 0xd5, 0x57, 0x38, 0xf8,
	0xe2, 0x84, 0x56, 0xe6, 0x2a, 0xe4, 0xc5, 0xd0, 0xb7, 0x40, 0xcf, 0x9d, 0x30, 0xb2, 0x53, 0x02,
	0x2f, 0x9a, 0xd8, 0x3d, 0xe8, 0x1d, 0xf6, 0x36, 0x66, 0x4f, 0x7b, 0x7c, 0x37, 0x65, 0xd9, 0x28,
	0x27, 0xc7, 0xe4, 0xa4, 0xfa, 0x7e, 0xbc, 0x50, 0xf6, 0xca, 0x89, 0x42, 0x36, 0xcb, 0xb2, 0xbe,
	0xe5, 0x46, 0x69, 0x6e, 0x7c, 0x58, 0xd1, 0x99, 0x52, 0xad, 0x2c, 0x76, 0x2b, 0xae, 0x43, 0x7a,
	0x43, 0xbc, 0xc5, 0xae, 0x07, 0xaf, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x35, 0x81, 0xd7, 0x3d,
	0x00, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublishUpdatesClient is the client API for PublishUpdates service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublishUpdatesClient interface {
	SubscribeToUpdates(ctx context.Context, opts ...grpc.CallOption) (PublishUpdates_SubscribeToUpdatesClient, error)
}

type publishUpdatesClient struct {
	cc *grpc.ClientConn
}

func NewPublishUpdatesClient(cc *grpc.ClientConn) PublishUpdatesClient {
	return &publishUpdatesClient{cc}
}

func (c *publishUpdatesClient) SubscribeToUpdates(ctx context.Context, opts ...grpc.CallOption) (PublishUpdates_SubscribeToUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PublishUpdates_serviceDesc.Streams[0], "/mysql.PublishUpdates/SubscribeToUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &publishUpdatesSubscribeToUpdatesClient{stream}
	return x, nil
}

type PublishUpdates_SubscribeToUpdatesClient interface {
	Send(*Request) error
	Recv() (*UpdateRecord, error)
	grpc.ClientStream
}

type publishUpdatesSubscribeToUpdatesClient struct {
	grpc.ClientStream
}

func (x *publishUpdatesSubscribeToUpdatesClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *publishUpdatesSubscribeToUpdatesClient) Recv() (*UpdateRecord, error) {
	m := new(UpdateRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PublishUpdatesServer is the server API for PublishUpdates service.
type PublishUpdatesServer interface {
	SubscribeToUpdates(PublishUpdates_SubscribeToUpdatesServer) error
}

func RegisterPublishUpdatesServer(s *grpc.Server, srv PublishUpdatesServer) {
	s.RegisterService(&_PublishUpdates_serviceDesc, srv)
}

func _PublishUpdates_SubscribeToUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PublishUpdatesServer).SubscribeToUpdates(&publishUpdatesSubscribeToUpdatesServer{stream})
}

type PublishUpdates_SubscribeToUpdatesServer interface {
	Send(*UpdateRecord) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type publishUpdatesSubscribeToUpdatesServer struct {
	grpc.ServerStream
}

func (x *publishUpdatesSubscribeToUpdatesServer) Send(m *UpdateRecord) error {
	return x.ServerStream.SendMsg(m)
}

func (x *publishUpdatesSubscribeToUpdatesServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PublishUpdates_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mysql.PublishUpdates",
	HandlerType: (*PublishUpdatesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeToUpdates",
			Handler:       _PublishUpdates_SubscribeToUpdates_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/protobuf-spec/mysql.proto",
}
