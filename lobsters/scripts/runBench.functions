
pull() {
	GIT_DIR=$PROTEUS_DIR/.git GIT_WORK_TREE=$PROTEUS_DIR git pull --recurse-submodules
}

build() {
	cd $PROTEUS_DIR/pkg/lobsters-bench
	make bench
	cd -
}

remote() {
	scp $PROTEUS_DIR/pkg/lobsters-bench/config/config.toml proteus-na-01:$PROTEUS_DIR/pkg/lobsters-bench/config/config.toml
	ssh -A -t proteus-na-01 "$@"
}

sync() {
	rsync -a $BENCH_DIR/datastore/ ~/volume/datastore
	rsync -a $BENCH_DIR/configs/ ~/volume/configs
	for ((i = 0; i < ${#nodes[@]}; i++))
	do
		rsync -a ~/volume/ $host:~/volume
	done
}

timestamp() {
	date +"%a %d %b %Y %H.%M.%S"
}

timestamp_filename() {
	date +"%d_%m_%Y_%H_%M_%S"
}

get_service_status() {
	docker service ps --format '{{ .CurrentState }}' $1
}

wait_service_running() {
	while :
	do
		sleep 1
		status=$(get_service_status $1)
		echo $status
		if [[ $status == Running* ]]
		then
			break
		fi
	done
}

wait_services_running() {
	for service in $(docker service ls --format '{{ .Name }}')
	do
		wait_service_running $service
	done
}
