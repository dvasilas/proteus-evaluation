operator = "join"
state = "materialized_view"
port = "50360"

maxWorkers = 4
maxJobQueue = 10000

[[InputSchema]]
table = "comments"
[[InputSchema.Attributes]]
key = "id"
type = "int"
[[InputSchema.Attributes]]
key = "user_id"
type = "int"
[[InputSchema.Attributes]]
key = "story_id"
type = "int"
[[InputSchema.Attributes]]
key = "comment"
type = "string"

[[InputSchema]]
table = "votes_sum"
[[InputSchema.Attributes]]
key = "comment_id"
type = "int"
[[InputSchema.Attributes]]
key = "vote_sum"
type = "int"

# assumptions
# - the first attribute in 'Projection' is the one to use for the join and is treated as libqpu.INT
#   (better make sure it actually is libqpu.INT)
# - the order of JoinConfig.Source entries match the order of connecions
# - i.e. the 1st entry of source is used to construct queries that are then sent to
#   the 1st connection, etc.
[JoinConfig]
outputTableAlias = "comments"
joinedAttributeAlias = "comment_id"
[[JoinConfig.Source]]
table = "comments"
joinAttribute = "id"
[[JoinConfig.Source]]
table = "votes_sum"
joinAttribute = "comment_id"

[Evaluation]
tracing = false
logTimestamps = false

[[connections]]
address = "dsdriver:50150"
local = "local"
[[connections]]
address = "sum-comments:50260"
local = "local"

[StateBackend]
endpoint = "127.0.0.1:3306"

[StateBackend.Credentials]
accessKeyID = "root"
secretAccessKey = "verySecrectQPUPwd"
