version: '3'
services:
  datastore:
    #image: dvasilas/proteus-lobsters:${TAG_DATASTORE}
    image: 127.0.0.1:5000/proteus-lobsters:${TAG_DATASTORE}
    networks:
      - proteus_net
    environment:
      - MYSQL_ROOT_PASSWORD=verySecretPwd
    volumes:
      - ${HOME}/volume/datastore/build/setup-proteus.sh:/docker-entrypoint-initdb.d/setup.sh
      - ${HOME}/volume/datastore/dataset/large_nocom.sql:/opt/proteus-lobsters/large_nocom.sql
      - ${HOME}/volume/datastore/build/db-schema/schema-proteus.sql:/opt/proteus-lobsters/schema-proteus.sql
    cap_add:
      - SYS_NICE
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.cloud == true
  dsdriver:
#    image: dvasilas/proteus:${TAG_QPU}
    image: 127.0.0.1:5000/proteus-stateless:${TAG_QPU}
    networks:
      - proteus_net
    environment:
      - MYSQL_PASSWORD=verySecrectQPUPwd
    volumes:
      - ${HOME}/volume/configs:/configs
    command: /configs/dsdriver.toml error
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.cloud == true
  sum:
#    image: dvasilas/proteus:${TAG_QPU}
    image: 127.0.0.1:5000/proteus-stateless:${TAG_QPU}
    networks:
      - proteus_net
    environment:
      - MYSQL_PASSWORD=verySecrectQPUPwd
    volumes:
      - ${HOME}/volume/configs:/configs
    command: /configs/sum-stories.toml error
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.cloud == true
  join:
#    image: dvasilas/proteus:${TAG_QPU} 
    image: 127.0.0.1:5000/proteus:${TAG_QPU}
    networks:
      - proteus_net
    environment:
      - MYSQL_PASSWORD=verySecrectQPUPwd
    volumes:
      - ${HOME}/volume/configs:/configs
    command: /configs/join-stories.toml error
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints: [ node.labels.cloud1 == true ]
  bench1:
    image: 127.0.0.1:5000/lobsters-bench:${TAG_BENCH}
    networks:
      - proteus_net
    volumes:
      - ${HOME}/volume/bench/config/config-proteus.toml:/config/config.toml 
      - /tmp:/out 
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints: [ node.labels.client == true ]
  bench2:
    image: 127.0.0.1:5000/lobsters-bench:${TAG_BENCH}
    networks:
      - proteus_net
    volumes:
      - ${HOME}/volume/bench/config/config-proteus.toml:/config/config.toml 
      - /tmp:/out 
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints: [ node.labels.client1 == true ]

networks:
  proteus_net:
    external: true
